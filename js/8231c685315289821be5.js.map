{"version":3,"file":"8231c685315289821be5.js","mappings":";;;;;;;;;;;;;;;;;;;AAAmD;AACE;AACE;AACZ;AAC3C,sBAAsB,qEAAqE;AAC3F;AACA,eAAe,0DAAmB,CAAC,uDAAc;AACjD;AACA;AACA,qBAAqB,6DAAW;AAChC,gCAAgC,+CAAQ;AACxC,IAAI,gDAAS;AACb;AACA,KAAK;AACL;AACA;AACA;AACA,wBAAwB,0DAAmB,UAAU,4HAA4H;AACjL,oBAAoB,0DAAmB,WAAW,4DAA4D,oCAAoC,aAAa;AAC/J;AACA;AACA,wBAAwB,0DAAmB,CAAC,kDAAI,IAAI,2HAA2H;AAC/K,oBAAoB,0DAAmB,WAAW,0GAA0G;AAC5J;AACA;AACA,gBAAgB,0DAAmB,UAAU,kDAAkD;AAC/F;AACA,mCAAmC,0DAAmB,SAAS,+FAA+F,oCAAoC,0DAAmB,eAAe,4DAA4D;AAChS;AACA;AACA;AACA;AACA,wBAAwB,0DAAmB,UAAU,oHAAoH;AACzK,oBAAoB,0DAAmB,CAAC,2DAAO,IAAI,sDAAsD,0CAA0C,GAAG,cAAc,0DAAmB,UAAU,sGAAsG;AACvS,oBAAoB,0DAAmB,WAAW,mDAAmD,mCAAmC,6CAA6C;AACrL,oBAAoB,0DAAmB,CAAC,2DAAO,IAAI,oEAAoE;AACvH;AACA;AACA,wBAAwB,0DAAmB,CAAC,kDAAI,IAAI,oHAAoH;AACxK,oBAAoB,0DAAmB,CAAC,2DAAO,IAAI,sDAAsD,0CAA0C,GAAG,cAAc,0DAAmB,UAAU,sGAAsG;AACvS,oBAAoB,0DAAmB,WAAW,2FAA2F;AAC7I;AACA;AACA,gBAAgB,0DAAmB,UAAU,4CAA4C;AACzF;AACA,mCAAmC,0DAAmB,SAAS,+DAA+D,oCAAoC,0DAAmB,eAAe,4DAA4D;AAChQ;AACA,WAAW,0DAAmB,CAAC,iEAAa,IAAI,+DAA+D;AAC/G;AACA,iEAAe,UAAU,EAAC;;;;;;;;;;;;;;;;;;;;;;ACjDyB;AACJ;AACQ;AACZ;AACN;AACC;AACtC;AACA,wCAAwC,+CAAQ;AAChD,wDAAwD,+CAAQ;AAChE,qBAAqB,6DAAW;AAChC;AACA;AACA;AACA,IAAI,gDAAS;AACb;AACA,KAAK;AACL,IAAI,gDAAS;AACb;AACA,KAAK;AACL,IAAI,gDAAS;AACb;AACA,KAAK;AACL;AACA,wBAAwB,0DAAmB,UAAU,iHAAiH;AACtK,YAAY,0DAAmB,UAAU,wCAAwC,EAAE,2DAAsB,YAAY,0DAAmB,CAAC,mDAAU,IAAI,8HAA8H,6DAAW,mBAAmB,UAAU,GAAG;AAChU,uBAAuB,0DAAmB;AAC1C,YAAY,0DAAmB,UAAU,+DAA+D,0CAA0C,GAAG;AACrJ,gBAAgB,0DAAmB,CAAC,2DAAO,IAAI,+EAA+E;AAC9H,gBAAgB,0DAAmB,UAAU,yCAAyC,mBAAmB,GAAG,EAAE,2DAAsB,mBAAmB,0DAAmB,CAAC,mDAAU,IAAI,sJAAsJ,6DAAW,mBAAmB,UAAU,GAAG;AAC1X;AACA,WAAW,0DAAmB,CAAC,iEAAa,IAAI,YAAY;AAC5D;AACA,iEAAe,MAAM,EAAC;;;;;;;;;;;;;;;;;;;;AChCI;AACuC;AACjB;AACN;AAC1C;AACA,YAAY,WAAW,EAAE,6DAAW;AACpC;AACA;AACA;AACA,YAAY,0DAAmB,CAAC,4DAAW;AAC3C,QAAQ,0DAAmB,CAAC,uDAAM;AAClC,QAAQ,0DAAmB,UAAU,6BAA6B,EAAE,6DAAW,sBAAsB,0DAAmB,CAAC,oDAAM,UAAU,0DAAmB,CAAC,sDAAQ,IAAI,gBAAgB;AACzL;AACA,iEAAe,IAAI,EAAC","sources":["webpack://leetcodecrack/./src/layouts/NavBar/NavBarItem.tsx","webpack://leetcodecrack/./src/layouts/NavBar/index.tsx","webpack://leetcodecrack/./src/pages/Home/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport LayoutDivider from '~/components/LayoutDivider';\nimport SvgICon from '~/components/SvgIcon';\nconst NavBarItem = ({ level = 0, children, iconName, path, isShow, isFocus, text, onClick }) => {\n    if (!isShow) {\n        return React.createElement(React.Fragment, null);\n    }\n    level++;\n    const location = useLocation();\n    const [isOpen, setIsOpen] = useState(false);\n    useEffect(() => {\n        setIsOpen(false);\n    }, [location]);\n    const renderDesktop = () => {\n        const renderRootItem = () => {\n            if (children) {\n                return (React.createElement(\"div\", { onClick: () => setIsOpen(!isOpen), className: \"relative flex h-full cursor-pointer flex-row items-center justify-between \" },\n                    React.createElement(\"span\", { className: `z-[9999] flex h-full items-center text-center ${level > 1 ? 'text-xs' : 'text-lg'}  text-white` }, text)));\n            }\n            else {\n                return (React.createElement(Link, { onClick: onClick, to: path, className: \"relative flex h-full flex-col items-center justify-center hover:bg-greyscale/20 \" },\n                    React.createElement(\"span\", { className: \" flex h-full items-center  text-center text-lg  leading-[150%] tracking-[0.4px] text-white \" }, text)));\n            }\n        };\n        return (React.createElement(\"div\", { className: \"relative flex h-full justify-center\" },\n            renderRootItem(),\n            children && isOpen && (React.createElement(\"li\", { className: \"absolute inset-0 top-[100%] z-[9999] flex h-fit flex-col space-y-2 bg-orange-500\" }, children.map((subItem, index) => (React.createElement(NavBarItem, { className: \"z-[99] \", key: index, ...subItem, level: level })))))));\n    };\n    const rendertMobile = () => {\n        const renderRootItem = () => {\n            if (children) {\n                return (React.createElement(\"div\", { onClick: () => setIsOpen(!isOpen), className: \"relative flex cursor-pointer flex-row items-center justify-between\" },\n                    React.createElement(SvgICon, { name: iconName, className: `relative justify-center ${isFocus ? 'text-white' : 'text-[#6A6A6A]'}` }, isFocus && (React.createElement(\"div\", { className: \"absolute right-[-16.6%] top-[-20.83%] h-[22%] w-[22%] rounded-full bg-navBarUnFocusBlue\" }))),\n                    React.createElement(\"span\", { className: `absolute inset-0 m-auto  text-center ${level > 1 ? 'text-xs' : 'text-lg'} leading-[150%] tracking-[0.4px] text-white` }, text),\n                    React.createElement(SvgICon, { name: \"arrow\", className: isOpen ? 'rotate-90' : 'rotate-[270deg]' })));\n            }\n            else {\n                return (React.createElement(Link, { onClick: onClick, to: path, className: \"relative flex flex-col items-center justify-center hover:bg-greyscale/20 \" },\n                    React.createElement(SvgICon, { name: iconName, className: `relative justify-center ${isFocus ? 'text-white' : 'text-[#6A6A6A]'}` }, isFocus && (React.createElement(\"div\", { className: \"absolute right-[-16.6%] top-[-20.83%] h-[22%] w-[22%] rounded-full bg-navBarUnFocusBlue\" }))),\n                    React.createElement(\"span\", { className: \"min-h-[18px] text-center text-xs leading-[150%] tracking-[0.4px] text-white \" }, text)));\n            }\n        };\n        return (React.createElement(\"div\", { className: \"relative flex w-full flex-col\" },\n            renderRootItem(),\n            children && isOpen && (React.createElement(\"li\", { className: \"relative flex flex-col space-y-2  bg-orange-500 \" }, children.map((subItem, index) => (React.createElement(NavBarItem, { className: \"z-[99] \", key: index, ...subItem, level: level })))))));\n    };\n    return React.createElement(LayoutDivider, { desktop: () => renderDesktop(), mobile: () => rendertMobile() });\n};\nexport default NavBarItem;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport LayoutDivider from '~/components/LayoutDivider';\nimport SvgICon from '~/components/SvgIcon';\nimport { HomeRoute } from '~/router';\nimport NavBarItem from './NavBarItem';\nconst NavBar = () => {\n    const [toggelMenu, setToggelMenu] = useState(false);\n    const [mobildContentClass, setMobildContentClass] = useState('hidden');\n    const location = useLocation();\n    const onMobileMenuClick = () => {\n        setToggelMenu(!toggelMenu);\n    };\n    useEffect(() => {\n        setMobildContentClass(toggelMenu ? 'h-[50vh] animate-menu_collpase_on ' : 'opacity-0 pointer-events-none animate-menu_collpase_off ');\n    }, [toggelMenu]);\n    useEffect(() => {\n        setMobildContentClass('hidden');\n    }, []);\n    useEffect(() => {\n        setToggelMenu(false);\n    }, [location]);\n    const layouts = {\n        desktop: () => (React.createElement(\"div\", { className: \"fixed z-50 flex max-h-10 min-h-[4rem] w-full flex-col items-center justify-around bg-navbar px-12 \" },\n            React.createElement(\"div\", { className: \"grid w-full grid-flow-col\" }, HomeRoute.children.map((item) => (React.createElement(NavBarItem, { key: item.path, isShow: item.isShow, iconName: item.icon, path: item.path, text: item.text, children: item.children, isFocus: useLocation().pathname === `${item.path}` })))))),\n        mobile: () => (React.createElement(\"div\", null,\n            React.createElement(\"div\", { className: `fixed z-50 h-m-navbar-desktop-h w-full bg-navbar ${toggelMenu ? 'opacity-100' : 'opacity-80'}` },\n                React.createElement(SvgICon, { onClick: onMobileMenuClick, className: \"justify-end text-white\", name: \"menu\" }),\n                React.createElement(\"div\", { className: `w-full space-y-3 bg-navbar ${mobildContentClass}` }, HomeRoute.children.map((item, index) => (React.createElement(NavBarItem, { onClick: onMobileMenuClick, key: index, isShow: item.isShow, iconName: item.icon, path: item.path, text: item.text, children: item.children, isFocus: useLocation().pathname === `${item.path}` }))))))),\n    };\n    return React.createElement(LayoutDivider, { ...layouts });\n};\nexport default NavBar;\n","import React from 'react';\nimport { Outlet, Navigate, useLocation } from 'react-router-dom';\nimport HomeWrapper from '~/layouts/HomeWrapper';\nimport NavBar from '../../layouts/NavBar';\nconst Home = () => {\n    const { pathname } = useLocation();\n    let contentContainer = '';\n    contentContainer = pathname === '/canvas/image-editor' ? 'content_editor_container' : 'content_container';\n    contentContainer = pathname === '/profile' ? 'content_profile' : 'content_container';\n    return (React.createElement(HomeWrapper, null,\n        React.createElement(NavBar, null),\n        React.createElement(\"div\", { className: contentContainer }, useLocation().pathname !== '/' ? React.createElement(Outlet, null) : React.createElement(Navigate, { to: '/profile' }))));\n};\nexport default Home;\n"],"names":[],"sourceRoot":""}