{"version":3,"file":"84fc690f719544a2d7da.js","mappings":";;;;;;;;;;;;;;;AAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,YAAY,0DAAmB,2BAA2B,WAAW;AACrE;AACA,6CAA6C,8CAA8C,EAAE,wCAAwC,EAAE,gBAAgB,2BAA2B;AAClL;AACA,wBAAwB;AACxB,iEAAe,MAAM,EAAC;AACtB;;;;;;;;;;;;;;;;;;;;;;;;;;ACZwC;AACgB;AACE;AACG;AACzB;AACQ;AACM;AAClB;AACgB;AACzC;AACP;AACA;AACA;AACA;AACA,8BAA8B,+CAAQ;AACtC;AACA;AACA,cAAc,UAAU,iEAAoB,iCAAiC;AAC7E,cAAc,UAAU,mEAAsB,yBAAyB;AACvE;AACA;AACA,cAAc,UAAU,mEAAsB,yBAAyB;AACvE,cAAc,UAAU,oEAAuB,qBAAqB;AACpE;AACA;AACA,YAAY,0BAA0B,EAAE,yDAAO;AAC/C,YAAY,4BAA4B,EAAE,qDAAU;AACpD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,YAAY,kDAAc,CAAC,6DAAc,GAAG,8BAA8B;AAC1E,SAAS;AACT;AACA,mBAAmB,6DAAW;AAC9B,YAAY,0DAAmB,CAAC,uDAAc,kBAAkB,0DAAmB,UAAU,kCAAkC;AAC/H,QAAQ,0DAAmB,WAAW,yCAAyC;AAC/E,YAAY,0DAAmB,UAAU,uCAAuC;AAChF,gBAAgB,0DAAmB,CAAC,2EAAK,IAAI,uKAAuK;AACpN,gBAAgB,0DAAmB,WAAW,+BAA+B;AAC7E,gBAAgB,0DAAmB,CAAC,2EAAK,IAAI,+KAA+K;AAC5N,gBAAgB,0DAAmB,WAAW,+BAA+B;AAC7E,YAAY,0DAAmB,UAAU,6CAA6C;AACtF,gBAAgB,0DAAmB,CAAC,kDAAI,IAAI,wBAAwB;AACpE,YAAY,0DAAmB,UAAU,2BAA2B;AACpE,gBAAgB,0DAAmB,CAAC,4EAAM,IAAI,wCAAwC;AACtF,YAAY,0DAAmB,UAAU,2BAA2B;AACpE,gBAAgB,0DAAmB,CAAC,4EAAM,IAAI,2CAA2C;AACzF,6BAA6B,0DAAmB,CAAC,oDAAM;AACvD;AACA,iEAAe,MAAM,EAAC","sources":["webpack://leetcodecrack/./node_modules/outsiderreact/dist/components/Button/index.js","webpack://leetcodecrack/./src/pages/Home/Member/index.tsx"],"sourcesContent":["import React from 'react';\r\nconst Button = (props) => {\r\n    const whiteClass = `bg-white \n   text-[#121212] hover:bg-[#121212] hover:text-white`;\r\n    const darkClass = `bg-[#121212]  \n   text-white hover:bg-white hover:text-[#121212]`;\r\n    return (React.createElement(\"button\", Object.assign({}, props, { \"data-testid\": \"btn\", className: `flex items-center justify-center border border-solid\n       border-black py-[0.8125rem]\n    px-[0.625rem] font-bold leading-[100%] ${props.isRounded ? 'rounded-full' : 'rounded'} ${props.isWhite ? whiteClass : darkClass} ${props.className}`, onClick: props.onClick }), props.children));\r\n};\r\nButton.defaultProps = { isRounded: false, isWhite: true };\r\nexport default Button;\r\n//# sourceMappingURL=index.js.map","import React, { useState } from 'react';\nimport Input from 'outsiderreact/dist/components/Input';\nimport Button from 'outsiderreact/dist/components/Button';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\nimport useAuthApi from '~/api/auth';\nimport { useForm } from '~/hooks/useMyForm';\nimport { validateRegexp } from '~/utils/validate';\nimport { store } from '~/store';\nimport { setAlertDialog } from '~/store/global';\nexport const LoginInitial = {\n    email: 'test.com',\n    password: 'T5204t5204-',\n};\nconst Member = () => {\n    const [token, setToken] = useState('');\n    const rules = {\n        email: [\n            { validate: validateRegexp.email, message: 'wrong mail formate' },\n            { validate: validateRegexp.require, message: 'need value' },\n        ],\n        password: [\n            { validate: validateRegexp.require, message: 'need value' },\n            { validate: validateRegexp.password, message: 'wrong ' },\n        ],\n    };\n    const { validator, handleSubmit } = useForm(LoginInitial, rules);\n    const { POST_LOGIN, GET_TokenTest } = useAuthApi();\n    const onSubmit = handleSubmit(async (data) => {\n        if (!data)\n            throw 'submit failed';\n        const res = await POST_LOGIN(data);\n        setToken(JSON.stringify(res.data.data));\n    });\n    const onTestToken = (e) => {\n        e.preventDefault();\n        GET_TokenTest().then((res) => {\n            store.dispatch(setAlertDialog({ show: true, msg: 'test work' }));\n        });\n    };\n    const isShow = useLocation().pathname === '/member';\n    return (React.createElement(React.Fragment, null, isShow ? (React.createElement(\"div\", { className: \"flex h-full w-full \" },\n        React.createElement(\"form\", { className: \"m-auto w-[50vw] space-y-6 \" },\n            React.createElement(\"div\", { className: \"flex flex-col space-y-5 \" },\n                React.createElement(Input, { name: \"email\", label: \"Account\", className: \"text-white\", type: \"text\", onChange: validator.noWhiteSpaceChange, value: validator.values.email, placeholder: \"Account\" }),\n                React.createElement(\"span\", { className: \" text-orange-500\" }, validator.errors.email.message),\n                React.createElement(Input, { name: \"password\", label: \"Password\", className: \"text-white\", type: \"text\", onChange: validator.noWhiteSpaceChange, value: validator.values.password, placeholder: \"Password\" }),\n                React.createElement(\"span\", { className: \" text-orange-500\" }, validator.errors.password.message)),\n            React.createElement(\"div\", { className: \"flex font-bold text-orange-400\" },\n                React.createElement(Link, { to: \"/member/register\" }, \"Register?\")),\n            React.createElement(\"div\", { className: \"flex w-full \" },\n                React.createElement(Button, { onClick: onSubmit, className: \"m-auto\" }, \"Submit\")),\n            React.createElement(\"div\", { className: \"flex w-full \" },\n                React.createElement(Button, { onClick: onTestToken, className: \"m-auto\" }, \"TokenTest\"),\n                token)))) : (React.createElement(Outlet, null))));\n};\nexport default Member;\n"],"names":[],"sourceRoot":""}