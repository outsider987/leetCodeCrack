{"version":3,"file":"d0486daec2b95b8eb00f.js","mappings":";;;;;;;;;;;;;;;;;;;AAA0B;AACyC;AACnC;AACgB;AACzC;AACP,kEAAkE,gpMAAW,SAAS,EAAE,QAAQ;AAChG,gBAAgB,mDAAY;AAC5B;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACO;AACP,gBAAgB,mDAAY;AAC5B;AACA,oBAAoB,gpMAAW,SAAS,EAAE,QAAQ;AAClD,mBAAmB,oCAAoC;AACvD,KAAK;AACL;AACA,sBAAsB,+DAAe;AACrC;AACA,qDAAqD,kBAAkB;AACvE;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oCAAoC,+DAAe;AACnD;AACA,qCAAqC,iDAAU,IAAI,gpMAAW,SAAS;AACvE;AACA,qBAAqB;AACrB;AACA,qDAAqD,yBAAyB;AAC9E,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA,oBAAoB,+DAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,QAAQ,kDAAc,CAAC,6DAAc,GAAG,kCAAkC,kDAAkD,GAAG;AAC/H;AACA;AACA;AACA;AACA,YAAY,kDAAc,CAAC,6DAAc,GAAG,gDAAgD;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACvFmC;AAC5B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,gDAAS;AAC/B;AACA;AACA,sBAAsB,6BAA6B;AACnD,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA,iEAAe,WAAW,EAAC;;;;;;;;;;;;;;;;;ACnCI;AAC/B;AACA,YAAY,gDAAmB,UAAU,+CAA+C;AACxF,oCAAoC,gDAAmB,WAAW,mBAAmB;AACrF,QAAQ,gDAAmB,YAAY,oDAAoD,wCAAwC;AACnI;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qBAAqB,+HAA+H;AAChK;AACA,uBAAuB;AACvB,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;;ACdkB;AACF;AAC9B;AACP,YAAY,YAAY,EAAE,qDAAW;AACrC,kBAAkB,qDAAQ;AAC1B;AACA;;;;;;;;;;;;;;;;;ACN4C;AAC5C;AACA,gDAAgD,+CAAQ;AACxD,IAAI,gDAAS;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iEAAe,WAAW,EAAC;;;;;;;;;;;;;;;;;;;;;ACbwB;AACZ;AACI;AACA;AACG;AAC9C;AACA,gCAAgC,+CAAQ;AACxC,4BAA4B,8DAAW;AACvC,YAAY,2BAA2B,EAAE,wDAAY;AACrD,IAAI,gDAAS,UAAU;AACvB,YAAY,0DAAmB;AAC/B,QAAQ,0DAAmB,CAAC,yDAAK,IAAI,2DAA2D;AAChG,sBAAsB,0DAAmB,CAAC,uDAAc;AACxD,YAAY,0DAAmB,CAAC,2DAAO,IAAI,gCAAgC;AAC3E;AACA,uBAAuB,0DAAmB,YAAY,oCAAoC;AAC1F,YAAY,0DAAmB,YAAY,8CAA8C;AACzF,gBAAgB,0DAAmB;AACnC,gBAAgB,0DAAmB;AACnC,gBAAgB,0DAAmB;AACnC,gBAAgB,0DAAmB;AACnC,YAAY,0DAAmB,YAAY,wBAAwB,sBAAsB,0DAAmB,CAAC,uDAAc;AAC3H,gBAAgB,0DAAmB,SAAS,4DAA4D;AACxG,oBAAoB,0DAAmB;AACvC;AACA;AACA,oBAAoB,0DAAmB;AACvC;AACA;AACA,oBAAoB,0DAAmB;AACvC;AACA;AACA,oBAAoB,0DAAmB;AACvC;AACA;AACA;AACA,iEAAe,QAAQ,EAAC;;;;;;;;;;;;;;;;;;;ACpCQ;AACQ;AACjC;AACP;AACA,IAAI,kDAAc,CAAC,qDAAQ;AAC3B,uCAAuC;AACvC;AACO;AACP;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACO;AACP;AACA,IAAI,kDAAc,CAAC,qDAAQ,GAAG,mCAAmC;AACjE","sources":["webpack://leetcodecrack/./src/api/base.ts","webpack://leetcodecrack/./src/api/post.ts","webpack://leetcodecrack/./src/components/Input.tsx","webpack://leetcodecrack/./src/data/post.ts","webpack://leetcodecrack/./src/hooks/useDebounce.ts","webpack://leetcodecrack/./src/pages/Home/Performance/Debounce.tsx","webpack://leetcodecrack/./src/utils/storage.ts"],"sourcesContent":["import axios from 'axios';\nimport { getTokenStorage, setTokenStorage } from '~/utils/storage';\nimport { store } from '~/store';\nimport { setAlertDialog } from '~/store/global';\nexport const publicApi = (subPath = '', isDummyData = false) => {\n    const url = isDummyData ? 'https://dummyapi.io/data/v1/' : `${process.env.API_URL}${subPath}`;\n    const api = axios.create({\n        baseURL: url,\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    });\n    api.interceptors.request.use((config) => {\n        return config;\n    }, (error) => {\n        return Promise.reject(error);\n    });\n    api.interceptors.response.use((response) => {\n        checkErrorCdoe(response);\n        return response;\n    }, (error) => {\n        checkErrorCdoe(error.response);\n        return error.response;\n    });\n    return api;\n};\nexport const privateApi = (subPath = '') => {\n    const api = axios.create({\n        // withCredentials: true,\n        baseURL: `${process.env.API_URL}${subPath}`,\n        headers: { 'Content-Type': 'application/json' },\n    });\n    api.interceptors.request.use(async (config) => {\n        const token = getTokenStorage();\n        if (config.headers)\n            config.headers.authorization = `Bearer ${token.accessToken}`;\n        return config;\n    }, (error) => {\n        return Promise.reject(error);\n    });\n    api.interceptors.response.use(async (response) => {\n        checkErrorCdoe(response);\n        return response;\n    }, async (error) => {\n        if (error.response) {\n            // Access Token was expired\n            if (error.response.status === 401) {\n                const storedToken = getTokenStorage();\n                try {\n                    const rs = await axios.post(`${process.env.API_URL}auth/refresh`, {\n                        refresh_token: storedToken.refresh_token,\n                    }, {\n                        headers: {\n                            authorization: `Bearer ${storedToken.refreshToken}`,\n                        },\n                    });\n                    if (rs.status === 401) {\n                        checkErrorCdoe(rs);\n                        return rs;\n                    }\n                    setTokenStorage(rs.data.data);\n                    return api(error.config);\n                }\n                catch (_error) {\n                    checkErrorCdoe(_error, _error);\n                    return Promise.reject(_error);\n                }\n            }\n        }\n        return Promise.reject(error);\n    });\n    return api;\n};\nasync function checkErrorCdoe(response, catchError = 'good') {\n    if (catchError.code === 'ERR_BAD_REQUEST') {\n        store.dispatch(setAlertDialog({ show: true, msg: JSON.stringify({ code: catchError.code, status: catchError.status }) }));\n        return;\n    }\n    switch (response.data.status) {\n        case false:\n            store.dispatch(setAlertDialog({ show: true, msg: JSON.stringify(response.data) }));\n            break;\n        case true:\n            break;\n        default:\n            break;\n    }\n}\n","import { publicApi } from './base';\nexport const PostDatasType = {\n    id: '60d21b4667d0d8992e610c85',\n    createdAt: '2023-01-02T00:00:00.000Z',\n    title: 'pellentesque volutpat dui maecenas',\n    published: false,\n    author_id: 2,\n    body: 'Sed ante. Vivamus tortor. Duis mattis egestas metus.',\n};\nexport const PostMarvelType = {\n    id: 100,\n    comic_name: 'A-Force (2016)',\n    active_years: '(2016)',\n    issue_title: 'A-Force (2016) #5',\n    publish_date: 'May 04, 2016',\n    issue_description: '\"Rage',\n    penciler: ' Rage Against The Dying Of The Light\"\" STARTS NOW! When a massive dragon attacks a small coastal town',\n    writer: ' SHE-HULK',\n    cover_artist: ' CAPTAIN MARVEL',\n    Imprint: ' MEDUSA',\n    Format: ' DAZZLER',\n    Rating: ' NICO MINORU',\n    Price: 0,\n};\nconst subPath = 'post';\nconst usePostsApi = () => {\n    const configApi = publicApi(subPath, false);\n    const GET_POSTS = async (dto) => {\n        const resp = await configApi.get('', {\n            params: { searchText: dto.queryKey[0] },\n        });\n        return resp.data.data;\n    };\n    return { GET_POSTS };\n};\nexport default usePostsApi;\n","import * as React from 'react';\nconst Input = (props) => {\n    return (React.createElement(\"div\", { className: `flex flex-col ` + props.className },\n        props.label != undefined && React.createElement(\"span\", { className: \"flex\" }, props.label),\n        React.createElement(\"input\", { ...props, \"data-testid\": \"add-word-input\", style: { backgroundColor: props.backgroundColor }, className: `w-auto rounded-md border-2\n            border-solid border-opacity-50 bg-black\n          px-2 pt-5 pb-4 text-sm\n           leading-4  \n           tracking-wide text-white outline-none placeholder:opacity-30\n           focus:border-orange-400\n            focus:opacity-100\n          ${props.inputClassName}`, type: props.type, placeholder: props.placeholder, value: props.value, autoFocus: props.autoFocus, onChange: props.onChange })));\n};\nInput.defaultProps = { autoFocus: false };\nexport default Input;\n","import { useQuery } from 'react-query';\nimport usePostsApi from '~/api/post';\nexport const usePostDatas = (searchText) => {\n    const { GET_POSTS } = usePostsApi();\n    const Posts = useQuery([searchText], GET_POSTS);\n    return Posts;\n};\n","import { useState, useEffect } from 'react';\nconst useDebounce = (value, delay) => {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [value, delay]);\n    return debouncedValue;\n};\nexport default useDebounce;\n","import React, { useEffect, useState } from 'react';\nimport Input from '~/components/Input';\nimport SvgICon from '~/components/SvgIcon';\nimport { usePostDatas } from '~/data/post';\nimport useDebounce from '~/hooks/useDebounce';\nconst Debounce = () => {\n    const [search, setSearch] = useState('');\n    const debouncedSearch = useDebounce(search, 1000);\n    const { data, isLoading, isError } = usePostDatas(debouncedSearch);\n    useEffect(() => { }, [debouncedSearch]);\n    return (React.createElement(\"div\", null,\n        React.createElement(Input, { value: search, onChange: (e) => setSearch(e.target.value) }),\n        isLoading && (React.createElement(React.Fragment, null,\n            React.createElement(SvgICon, { name: \"spin\", className: \"w-5\" }),\n            isLoading ? 'Loading...' : '')),\n        !isLoading && (React.createElement(\"table\", { className: \"space-y-2 text-center\" },\n            React.createElement(\"thead\", { className: \"border-b bg-gray-800 text-white\" },\n                React.createElement(\"th\", null, \"name\"),\n                React.createElement(\"th\", null, \"year\"),\n                React.createElement(\"th\", null, \"writer\"),\n                React.createElement(\"th\", null, \"description\")),\n            React.createElement(\"tbody\", { className: \"max-h-96 \" }, data.map((post) => (React.createElement(React.Fragment, null,\n                React.createElement(\"tr\", { className: \"border-b border-solid border-white text-white\" },\n                    React.createElement(\"td\", null,\n                        \" \",\n                        post.comic_name),\n                    React.createElement(\"td\", null,\n                        \" \",\n                        post.active_years),\n                    React.createElement(\"td\", null,\n                        \" \",\n                        post.writer),\n                    React.createElement(\"td\", null,\n                        \" \",\n                        post.issue_description))))))))));\n};\nexport default Debounce;\n","import { store } from '~/store';\nimport { setToken } from '~/store/auth';\nexport const setTokenStorage = (tokens) => {\n    localStorage.setItem('tokens', JSON.stringify(tokens));\n    store.dispatch(setToken(tokens));\n    // store.dispatch(setTokenConfig({}));\n};\nexport const getTokenStorage = () => {\n    const tokens = localStorage.getItem('tokens');\n    if (tokens == undefined)\n        return { accessToken: '', refreshToken: '' };\n    if (tokens)\n        return JSON.parse(tokens);\n    return '';\n};\nexport const cleanTokenStorage = () => {\n    localStorage.removeItem('tokens');\n    store.dispatch(setToken({ accessToken: '', refreshToken: '' }));\n};\n"],"names":[],"sourceRoot":""}