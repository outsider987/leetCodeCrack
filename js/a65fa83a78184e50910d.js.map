{"version":3,"file":"a65fa83a78184e50910d.js","mappings":";;;;;;;;;;;;;;;;AAA2D;AAC5B;AAC/B;AACA,sBAAsB,6CAAM;AAC5B,4BAA4B,+CAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,YAAY,0DAAmB,UAAU,uDAAuD;AAChG,0BAA0B,0DAAmB,UAAU,gEAAgE;AACvH,YAAY,0DAAmB,UAAU,0BAA0B;AACnE,YAAY,0DAAmB,YAAY,sHAAsH;AACjK,QAAQ,0DAAmB,aAAa,0BAA0B;AAClE,QAAQ,0DAAmB,UAAU,6BAA6B;AAClE,YAAY,0DAAmB,CAAC,+CAAM,IAAI,uBAAuB;AACjE;AACA,iEAAe,iBAAiB,EAAC;;;;;;;;;;;;;;;;;;ACxCP;AAC2C;AACrE;AACA,YAAY,0DAAmB,UAAU,sEAAsE;AAC/G,QAAQ,0DAAmB,CAAC,2EAAiB,IAAI,kEAAkE;AACnH;AACA,iEAAe,WAAW,EAAC","sources":["webpack://leetcodecrack/./src/components/Chart/CanvasImageEditor.tsx","webpack://leetcodecrack/./src/pages/Home/Canvas/ImageEditor.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport Button from '../Button';\nconst CanvasImageEditor = (props) => {\n    const canvasRef = useRef(null);\n    const [file, setFile] = useState(null);\n    const onClickFile = (e) => {\n        setFile(e.target.files[0]);\n    };\n    const onDeleteFile = (e) => {\n        setFile(null);\n    };\n    useEffect(() => {\n        if (canvasRef.current && file !== null) {\n            const canvas = canvasRef.current;\n            const ctx = canvasRef.current.getContext('2d');\n            // ctx.imageSmoothingEnabled = false;\n            const image = new Image();\n            image.onload = () => {\n                let ratio = Math.min(canvas.width / image.width, canvas.height / image.height);\n                let x = (canvas.width - image.width * ratio) / 2;\n                let y = (canvas.height - image.height * ratio) / 2;\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\n                ctx.drawImage(image, 0, 0, image.width, image.height, x, y, image.width * ratio, image.height * ratio);\n            };\n            image.src = URL.createObjectURL(file);\n        }\n        else {\n            const canvas = canvasRef.current;\n            const ctx = canvasRef.current.getContext('2d');\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n        }\n    }, [file]);\n    return (React.createElement(\"div\", { className: ` relative border-solid border-yellow-400` },\n        file === null && (React.createElement(\"div\", { className: \"absolute inset-0 flex items-center justify-center\" },\n            React.createElement(\"div\", { className: \" text-white\" }, \"please click or drag file\"),\n            React.createElement(\"input\", { onChange: onClickFile, className: \" absolute inset-0 z-10 cursor-pointer opacity-0\", type: \"file\", accept: \"image/*\" }))),\n        React.createElement(\"canvas\", { ...props, ref: canvasRef }),\n        React.createElement(\"div\", { className: \"flex space-x-3\" },\n            React.createElement(Button, { onClick: onDeleteFile }, \" delete File\"))));\n};\nexport default CanvasImageEditor;\n","import React from 'react';\nimport CanvasImageEditor from '~/components/Chart/CanvasImageEditor';\nconst ImageEditor = () => {\n    return (React.createElement(\"div\", { className: \"m-auto flex w-full flex-col items-center justify-center\" },\n        React.createElement(CanvasImageEditor, { className: \"h-[50vh] w-[65vw] border border-solid border-white \" })));\n};\nexport default ImageEditor;\n"],"names":[],"sourceRoot":""}